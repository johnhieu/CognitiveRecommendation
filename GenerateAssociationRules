%Method for generating association rules and recommending third widget based on the first two
%input: file containing all the transaction i.e. used widget on a particular session by every user
%output: The set of rules which will be analysed by the system to come up with the third widget

function [ returnString ] = GenerateAssociationRules(fileName)
%import weka library and add java path
javaaddpath('C:\Program Files\Weka-3-6\weka.jar'); %Path to the weka.jar executable file
import weka.core.Instances.*;

options = '-N 15 -T  -C 0.6 -D 0.05 -U 1.0 -M 0.1 -S -1.0 -c -1'; % parameters for Apriori algorithm 
tempVar = java.lang.String(options);
params = tempVar.split(' ');
association = weka.associations.Apriori;
association.setOptions(params); % set the parameters
reader = javaObject('java.io.FileReader', fileName); %File name has to be in .arff format
data = javaObject('weka.core.Instances', reader);
association.buildAssociations(data); % Generate the association rules
tempString = association.toString();
tempString = java.lang.String(tempString);
returnString = tempString.substring(tempString.indexOf('Best rules found')); %just sending back the rules to the caller